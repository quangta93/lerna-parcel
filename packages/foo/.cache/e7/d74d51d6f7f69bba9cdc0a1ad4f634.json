{"id":"index.js","dependencies":[{"name":"C:\\Users\\quang\\Development\\lerna-parcel\\packages\\foo\\package.json","includedInParent":true,"mtime":1592424630323}],"generated":{"js":"// Using async/await\nconst delay = ms => new Promise(resolve => {\n  setTimeout(resolve, ms);\n});\n\nconst init = async () => {\n  await delay(1000);\n  console.log(\"init done\");\n};\n\ninit();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"index.js","original":{"line":3,"column":0}},{"name":"delay","generated":{"line":2,"column":6},"source":"index.js","original":{"line":3,"column":6}},{"generated":{"line":2,"column":11},"source":"index.js","original":{"line":3,"column":11}},{"name":"ms","generated":{"line":2,"column":14},"source":"index.js","original":{"line":3,"column":15}},{"generated":{"line":2,"column":16},"source":"index.js","original":{"line":3,"column":14}},{"generated":{"line":2,"column":20},"source":"index.js","original":{"line":4,"column":2}},{"name":"Promise","generated":{"line":2,"column":24},"source":"index.js","original":{"line":4,"column":6}},{"generated":{"line":2,"column":31},"source":"index.js","original":{"line":4,"column":2}},{"name":"resolve","generated":{"line":2,"column":32},"source":"index.js","original":{"line":4,"column":15}},{"generated":{"line":2,"column":39},"source":"index.js","original":{"line":4,"column":14}},{"generated":{"line":2,"column":43},"source":"index.js","original":{"line":4,"column":27}},{"name":"setTimeout","generated":{"line":3,"column":0},"source":"index.js","original":{"line":5,"column":4}},{"name":"setTimeout","generated":{"line":3,"column":2},"source":"index.js","original":{"line":5,"column":4}},{"generated":{"line":3,"column":12},"source":"index.js","original":{"line":5,"column":14}},{"name":"resolve","generated":{"line":3,"column":13},"source":"index.js","original":{"line":5,"column":15}},{"generated":{"line":3,"column":20},"source":"index.js","original":{"line":5,"column":14}},{"name":"ms","generated":{"line":3,"column":22},"source":"index.js","original":{"line":5,"column":24}},{"generated":{"line":3,"column":24},"source":"index.js","original":{"line":5,"column":14}},{"generated":{"line":3,"column":25},"source":"index.js","original":{"line":5,"column":4}},{"generated":{"line":4,"column":0},"source":"index.js","original":{"line":6,"column":3}},{"generated":{"line":4,"column":1},"source":"index.js","original":{"line":4,"column":2}},{"generated":{"line":4,"column":2},"source":"index.js","original":{"line":3,"column":0}},{"generated":{"line":6,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"name":"init","generated":{"line":6,"column":6},"source":"index.js","original":{"line":8,"column":6}},{"generated":{"line":6,"column":10},"source":"index.js","original":{"line":8,"column":10}},{"generated":{"line":6,"column":13},"source":"index.js","original":{"line":8,"column":13}},{"generated":{"line":6,"column":25},"source":"index.js","original":{"line":8,"column":25}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":9,"column":2}},{"name":"delay","generated":{"line":7,"column":8},"source":"index.js","original":{"line":9,"column":8}},{"generated":{"line":7,"column":13},"source":"index.js","original":{"line":9,"column":13}},{"generated":{"line":7,"column":14},"source":"index.js","original":{"line":9,"column":14}},{"generated":{"line":7,"column":18},"source":"index.js","original":{"line":9,"column":13}},{"generated":{"line":7,"column":19},"source":"index.js","original":{"line":9,"column":2}},{"name":"console","generated":{"line":8,"column":0},"source":"index.js","original":{"line":10,"column":2}},{"name":"console","generated":{"line":8,"column":2},"source":"index.js","original":{"line":10,"column":2}},{"generated":{"line":8,"column":9},"source":"index.js","original":{"line":10,"column":9}},{"name":"log","generated":{"line":8,"column":10},"source":"index.js","original":{"line":10,"column":10}},{"generated":{"line":8,"column":13},"source":"index.js","original":{"line":10,"column":2}},{"generated":{"line":8,"column":14},"source":"index.js","original":{"line":10,"column":14}},{"generated":{"line":8,"column":25},"source":"index.js","original":{"line":10,"column":2}},{"generated":{"line":9,"column":0},"source":"index.js","original":{"line":11,"column":1}},{"generated":{"line":9,"column":1},"source":"index.js","original":{"line":8,"column":0}},{"name":"init","generated":{"line":11,"column":0},"source":"index.js","original":{"line":13,"column":0}},{"generated":{"line":11,"column":4},"source":"index.js","original":{"line":13,"column":4}}],"sources":{"index.js":"// Using async/await\r\n\r\nconst delay = (ms) =>\r\n  new Promise((resolve) => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n\r\nconst init = async () => {\r\n  await delay(1000);\r\n  console.log(\"init done\");\r\n};\r\n\r\ninit();\r\n"},"lineCount":null}},"error":null,"hash":"0c81aa40565a5328c53b9f6d8f65098a","cacheData":{"env":{}}}